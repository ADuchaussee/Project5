<!--create an animated web page using a combination of HTML, CSS and JavaScript. This web page will provide a canvas (for the animation) and an interface to control the animation.-->
<!DOCTYPE html>
<html>
	<head>
		<title>Ball Animation</title>
		<style>
			<!-- Place any CSS code here -->
		</style>
	</head>
	<body>
		<h2>Project 5 animated webpage</h2>
		
		<!-- CAUTION - Avoid changing the values and style of the HTML tags below - CAUTION -->
		<div style="width: 1000px; float: left;">
			<!-- The canvas is where the animation happens -->
			<canvas id="container" height=600 width=1000 style="border: 1px solid;"></canvas>
		</div>
		<!-- This div holds the interface for the user to control the animation -->
		<div style="width: 325px; height: 590px; margin-left: 1020px; padding: 10px 0px 0px 10px; border: 1px solid;">
			<!-- This div is for the Add a Ball radio button -->
			<div style="width: 100px; float: left;">
				<input type="radio" id="add_ball" name="add_ball" onclick= "updateForm(this)">
				<label for="add_ball">Add a Ball</label><br>
				<!-- Add a radio button to display the Add a Ball controls -->
			</div>
			<!-- This div is for the Update a Ball radio button -->
			<div style="width: 120px; margin-left: 110px;">
					 <input type="radio" id="update_ball" name="updateBall" onclick= "updateForm(this)">
                                <label for="updateBall">Update The Ball</label><br>
				<!-- Add a radio button to display the Update a Ball controls -->
			</div>
			<!-- This div is for the Add a Ball controls -->
			<div id="add_ball" style="display: block; height: 175px;">
				<!-- Add the Add a Ball controls here -->
				<input type="text" id="add_ball" name="fieldName">
				<label for="fieldName">Name</label><br>

				<input type="number" id="add_ball" name="radius" min="10 " max="50">
				<label for="radius">Radius</label><br>
				
				<input type="number" id="add_ball" name="radius" min="0 " max="25">
                                <label for="radius">Speed</label><br>
				
				<button onclick="addBall()">Add Ball</button>
			</div>
			<!-- This div is for the Update a Ball controls -->
			<div id="update_ball" style="display: none;  height: 175px;">
				<!-- Add the Update a Ball controls here -->
				 <input type="text" id="update_ball" name="fieldName">
                                <label for="fieldName">Name</label><br>

                                <input type="number" id="update_ball" name="radius" min="10 " max="50">
                                <label for="radius">Radius</label><br>

                                <input type="number" id="update_ball" name="radius" min="0 " max="25">
                                <label for="radius">Speed</label><br>

                                <button onclick="updateBall()">Update Ball</button>
			</div>
			<!-- This div is for the Stop All Balls button -->
			<div style="text-align: center;">
				<!-- Add the Stop All Balls button here -->
			</div>
		</div>

		<script>
			<!-- The Ball class allows you to add multiple balls to the canvas -->
			class Ball {
				color = 0; <!-- The current color based on the ball's direction -->
				movingDown = true; <!-- Is ball moving towards the bottom of canvas -->
				movingRight = true; <!-- Is ball moving towards the right of canvas -->
				name = ""; <!-- The name assigned to the ball -->
				radius = 0; <!-- The radius assigned to the ball -->
				speed = 0; <!-- The speed assigned to the ball -->
				xPos = 0; <!-- The current horizontal position of the ball -->
				yPos = 0; <!-- The current vertical position of the ball -->
				
				<!-- Create an instance of the Ball class -->
				constructor(name, radius, speed) {
					
				}
				
				<!-- Getters and setters -->
				get name() { }
				
				get radius() { }
				
				get speed() { }
				
				set name(name) { }
								
				set radius(radius) { }
				
				set speed(speed) { }
				
				<!-- Determine if the ball's direction needs to change -->
				<!-- This should prevent the ball from traveling beyond the canvas borders -->
				checkForWallCollision() {
					
				}
				
				<!-- Draw the ball at its current position on the canvas -->
				draw(canvas) {
					
				}
				
				<!-- Choose the ball's color based on its direction of travel -->
				updateColor() {
					
				}
				
				<!-- Update the ball's position based on its direction and speed -->
				updatePosition() {
					
				}
			}

			const BALLS = []; <!-- Array to hold the balls added to the canvas -->
			const COLORS = ["red", "green", "blue", "yellow"];
			const MAX_WIDTH = 1000; <!-- Width of the canvas defined in the HTML above -->
			const MAX_HEIGHT = 600; <!-- Height of the canvas defined in the HTML above -->
			<!-- Creates timer to automate the animation -->
			<!-- The timer repeats every 10 milliseconds -->
			const TIMER = setInterval(updateCanvas, 10, document.getElementById("container").getContext("2d"));
			
			updateAddBallForm(); <!-- Prefills data in the Add a Ball fields -->
			
			<!-- Creates a new ball and adds it to the BALLS array -->
			function addBall() {
				
			}

			<!-- Turns the timer off to stop the animation -->
			function stopAnimation() {
				clearInterval(TIMER);
			}
			
			<!-- Prefills data in the Add a Ball fields -->
			function updateAddBallForm() {
				
			}

			<!-- Updates the selected ball with the data in the Update a Ball fields -->
			function updateBall() {
				
			}
			
			<!-- Draws the next frame of animation on the canvas -->
			function updateCanvas(canvas) {
				
			}

			<!-- Display the fields of the the selected form: Add a Ball or Update a Ball -->			
			function updateForm(control) {
				
			}
			
			<!-- Display the data in the Update a Ball fields when a ball is selected -->			
			function updateSelection() {
				
			}
			
			<!-- Update the Update a Ball drop-down list when a ball is added -->
			function updateSelectList() {
				
			}
		</script>
	</body>
</html>
